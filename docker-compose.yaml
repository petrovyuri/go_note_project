# Конфигурация Docker Compose для сервисов приложения
services:
  # База данных PostgreSQL для сервиса авторизации
  db_auth:
    # Образ PostgreSQL версии 14 с использованием Alpine Linux
    image: postgres:14-alpine
    # Имя контейнера
    container_name: db_auth
    # Переменные окружения для PostgreSQL
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Тома для хранения данных PostgreSQL
    volumes:
      - db_auth_vol:/var/lib/postgresql/data
    # Перезапускать контейнер при сбое
    restart: always
    # # Внутренняя сеть для связи между сервисами
    networks:
      - notes_net

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    environment:
      PORT: ${AUTH_PORT}
      HOST: ${AUTH_HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USE_SSL: ${POSTGRES_USE_SSL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION}
      SERVER_TIMEOUT: ${SERVER_TIMEOUT}
      DB_TIMEOUT: ${DB_TIMEOUT}
    depends_on:
      - db_auth
    restart: always
    networks:
      - notes_net

  # PgAdmin для управления базой данных
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PG_PORT}:80"
    volumes:
      - pg_admin_vol:/var/lib/pgadmin
    depends_on:
      - db_auth
    networks:
      - notes_net

  # База данных MongoDB для сервиса заметок
  db_notes:
    container_name: db_notes
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    image: mongo:5.0.25
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
       - db_notes_vol:/data/db
    restart: always
    networks:
      - notes_net
    # MongoDB Express - веб-интерфейс для управления MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_HOST}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    ports:
      - "${ME_PORT}:${ME_PORT}"
    depends_on:
      - db_notes
    volumes:
      - mongo-express_vol:/data/db
    restart: always
    networks:
      - notes_net    


networks:
  notes_net:
    driver: bridge

volumes:
  db_auth_vol:  
    driver: local
  pg_admin_vol:
    driver: local
  db_notes_vol:
    driver: local
  mongo-express_vol:
    driver: local